name: Continuous Integration

env:
  RUST_LOG: info
  RUST_BACKTRACE: 1

on:
  pull_request:
    branches: [master]

jobs:
  verify:
    strategy:
      matrix:
        include:
          - os: macos-latest
            targets: '["x86_64-apple-darwin", "aarch64-apple-darwin"]'
          - os: windows-latest
            targets: '["x86_64-pc-windows-msvc"]'
          - os: ubuntu-latest
            targets: '["x86_64-unknown-linux-gnu"]'
    name: Verify (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        run: |
          # Install the host platform toolchain
          rustup update stable --no-self-update && rustup default stable
          # Install targets
          rustup target add ${{ join(fromJson(matrix.targets), ' ') }}
          # Install any components
          rustup component add clippy
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Clippy
        run: cargo clippy --target=${{ join(fromJson(matrix.targets), ' --target=') }} --all-targets --all-features --workspace --exclude=aws-config -- -D warnings
      - name: Build
        run: cargo build --target=${{ join(fromJson(matrix.targets), ' --target=') }} --all-targets --all-features
      - name: Test
        run: cargo test --target=${{ join(fromJson(matrix.targets), ' --target=') }} --all-targets --all-features --workspace --exclude=aws-config

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        run: |
          # Install the host platform toolchain
          rustup update stable --no-self-update && rustup default stable
          # Install any components
          rustup component add rustfmt
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Format
        run: cargo fmt --all -- --check
